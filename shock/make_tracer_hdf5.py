#!/usr/bin/env python

import os
import sys
import pathlib

if "PICNIX_DIR" in os.environ:
    sys.path.append(str(pathlib.Path(os.environ["PICNIX_DIR"]) / "script"))
import picnix


description = """\
This script convert original tracer data files generated by
a PIC-NIX simulation to an HDF5 file.

The original tracer files will be removed after the conversion
if and only if the environment variable
    PICNIX_REMOVE_ORIGINAL_TRACER_FILES
is set to 'YES'.
"""

if __name__ == "__main__":
    import argparse

    parser = argparse.ArgumentParser(
        formatter_class=argparse.RawDescriptionHelpFormatter,
        description=description,
    )

    parser.add_argument(
        "-o",
        "--output",
        type=str,
        default="tracer.h5",
        help="Output HDF5 file name (default: tracer.h5)",
    )
    parser.add_argument(
        "-s",
        "--species",
        type=int,
        default=0,
        help="Species number (default: 0)",
    )
    parser.add_argument(
        "-c",
        "--clean-only",
        action="store_true",
        default=False,
        help="Remove original tracer files without conversion",
    )
    parser.add_argument(
        "-f",
        "--force-clean",
        action="store_true",
        default=False,
        help="Remove original tracer files without checking environment variable",
    )
    parser.add_argument("profile", nargs=1, help="simulation run profile")
    args = parser.parse_args()

    # profile
    profile = args.profile[0]
    species = args.species
    hdffile = args.output

    run = picnix.Run(profile, method="thread")

    #
    # convert tracer to hdf5
    #
    if args.clean_only == False:
        picnix.convert_tracer_to_hdf5(run, species, hdffile)

    #
    # remove original tracer files
    #
    if args.force_clean == True:
        os.environ["PICNIX_REMOVE_ORIGINAL_TRACER_FILES"] = "YES"

    picnix.remove_tracer_file_after_confirmation(run, species, hdffile)
